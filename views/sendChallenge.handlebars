{{> challenge_nav }}
<main>
   <div>
      <h1>Rise-to-the-Challenge</h1>
   </div>
   <div class="z-depth-2 cont">
      <h5>Issue your Challenge</h5>
      <div class="collection Form">
         <br>
         <div class="row">
            <form class="col s12" id="challengeIssue">
               <div class="row">
                  <div class="input-field col s6">
                     <input id="challenge_autocomplete" placeholder="Ice bucket Challenge" name="challenge_name" type="text" class="autocomplete validate">
                     <label class="active" for="challenge_autocomplete">Name of the Challenge:</label>
                  </div>
               </div>
               <div class="row">
                  <div class="input-field col s6">
                     <input id="recepient_autocomplete" placeholder="Placeholder" name="challenged_name" type="text" class="autocomplete validate" multiple>
                     <label class="active" for="name_autocomplete">Name of the Person you wish to challenge:</label>
                  </div>
                  <div class="input-field col s6">
                     <input id="email" placeholder="example@gmail.com" name="challenged" type="text" class="autocomplete validate" multiple>
                     <label class="active" for="email_autocomplete">Their Email:</label>
                  </div>
               </div>
               <div class="row">
                  <div class="input-field col s12">
                     <textarea id="rules" name="rules" class="materialize-textarea validate"></textarea>
                     <label class="active" for="rules">Rules:</label>
                  </div>
               </div>
               <div class="col s12">
                  <div class="input-field">
                     <input id="proofLink" placeholder="link your proof video or image here" name="postLink" type="url" class="validate">
                     <label class="active" for="email" data-error="wrong" data-success="right">Proof: Image or Video</label>
                  </div>
               </div>
               <!--<a href="./dashboard.html">-->
               <button class="btn waves-effect waves-light" type="submit" name="action">Submit
                  <!--<i class="material-icons right">send</i>-->
               </button>
            </form>
            <!--</a>-->
         </div>
      </div>
</main>
<script type="text/javascript">
let __templateId = null;
let __userId = null;
(function($) {
   const template = JSON.parse(`{{json template}}`);
   const user = JSON.parse(`{{json user}}`);

   // template
   const template_name = new Array(),
      template_rule = {};

   template.forEach((elem) => {
      template_name.push({ label: elem.name, value: elem.id });
      template_rule[elem.id] = elem.rule; // this is autofilled
   });

   console.log(template_name);

   $("#challenge_autocomplete").autocomplete({
      source: template_name,
      limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
      select: function(event, ui) {
         // event.preventDefault();
         $("#challenge_autocomplete").val(ui.item.label);
         $("#rules").val(template_rule[ui.item.value]).prop("placeholder", "").next("label").text("");
         __templateId = ui.item.value;
         return false; // Prevent the widget from inserting the value.
      },
      focus: function(event, ui) {
         $("#challenge_autocomplete").val(ui.item.label);
         return false; // Prevent the widget from inserting the value.
      },
      minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
   });

   // user
   const user_name = new Array(),
      user_email = {};

   user.forEach((elem) => {
      user_name.push({ label: elem.name, value: elem.id });
      user_email[elem.id] = elem.email;
   });

   $("#recepient_autocomplete").autocomplete({
      source: user_name,
      limit: 20,
      onAutocomplete: function(val) {},
      minLength: 1
   });

   $("#recepient_autocomplete").autocomplete({
      source: user_name,
      limit: 20, // The max amount of results that can be shown at once. Default: Infinity.
      select: function(event, ui) {
         $("#recepient_autocomplete").val(ui.item.label);
         $("#email").val(user_email[ui.item.value]);
         __userId = ui.item.value;
         return false; // Prevent the widget from inserting the value.
      },
      focus: function(event, ui) {
         $("#recepient_autocomplete").val(ui.item.label);
         return false; // Prevent the widget from inserting the value.
      },
      minLength: 1, // The minimum length of the input for the autocomplete to start. Default: 1.
   });

   console.log(template);
}(jQuery));
</script>